name: 'Build and Push to Google Artifactory'
description: 'Build a docker container and publish it to Google Artifactory.'
inputs:
  google-key:
    description: 'Key to authenticate gcloud'
    required: true
  service-name:
    description: 'service name'
    required: true
  google-project:
    description: 'GCP project to use'
    required: false
    default: 'tilda-dev-325721'
  context:
    description: 'Path to the docker context'
    required: false
    default: .
  file:
    description: 'Path to Dockerfile'
    required: false
    default: Dockerfile
  push:
    description: 'Whether to push the image to artifactory or not'
    required: false
    type: boolean
    default: true
  artifactory-url:
    description: 'url'
    required: false
    default: us-central1-docker.pkg.dev
outputs:
  image:
    description: "Build docker image"
    value: testing custom action
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        clean: false

    - name: Repo Name
      id: repo-name
      uses: frabert/replace-string-action@v2.0
      with:
        string: ${{ github.repository }}
        pattern: ${{ github.repository_owner }}/
        replace-with: ''

    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.google-key }}

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: gcloud auth configure-docker ${{ inputs.artifactory-url }}
      shell: bash

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ inputs.artifactory-url }}/${{ inputs.google-project }}/artifacts/services/${{ inputs.service-name }}
        tags: |
          type=sha,enable=true,priority=100,prefix=${{ github.head_ref || github.ref_name}}-,suffix=,format=short

    - uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        builder: ${{ steps.buildx.outputs.name }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
